require './lib/ride'
require './lib/biker'
require './lib/bike_club'
require 'pry'

RSpec.describe BikeClub do
  before(:each) do
    @club = BikeClub.new("The Rainbow Sprinkles")
  end
  describe "#initialize" do
    it 'exists' do
      expect(@club).to be_a(BikeClub)
    end
    it 'has a name' do
      expect(@club.name).to eq("The Rainbow Sprinkles")
    end
    it 'can initialize an empty array of bikers' do
      expect(@club.bikers).to eq([])
    end
  end
  describe "#methods" do
    it 'can add bikers' do
      biker1 = Biker.new("Kenny", 30)
      biker2 = Biker.new("Athena", 15)

      @club.add_biker(biker1)
      @club.add_biker(biker2)

      expect(@club.bikers).to eq([biker1,biker2])
    end
    it 'has a biker with the most rides' do
      biker1 = Biker.new("Kenny", 30)
      biker2 = Biker.new("Athena", 15)

      ride1 = Ride.new({name: "Walnut Creek Trail", distance: 10.7, loop: false, terrain: :hills})
      ride2 = Ride.new({name: "Town Lake", distance: 14.9, loop: true, terrain: :gravel})

      biker1.learn_terrain(:gravel)
      biker1.learn_terrain(:hills)

      biker1.log_ride(ride1, 92.5)
      biker1.log_ride(ride1, 91.1)
      biker1.log_ride(ride2, 60.9)
      biker1.log_ride(ride2, 61.6)

      biker2.learn_terrain(:gravel)
      biker2.learn_terrain(:hills)

      biker2.log_ride(ride2, 65.0)

      @club.add_biker(biker1)
      @club.add_biker(biker2)

      expect(@club.most_rides).to eq(biker1)

    end
  end
end